             PGM        PARM(&cur &APP &ENV &VER &prec &lib)

             DCL        VAR(&IDL) TYPE(*DEC) LEN(4 0) VALUE(1)
             DCL        VAR(&idx) TYPE(*dec) LEN(4 0)
             DCL        VAR(&LISTA) TYPE(*CHAR) LEN(2000)
             DCL        VAR(&AMB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&libs) TYPE(*CHAR) LEN(100)
             DCL        VAR(&lib) TYPE(*CHAR) LEN(10)

             DCL        VAR(&RISULT) TYPE(*CHAR) LEN(10)
             DCL        VAR(&prec) TYPE(*CHAR) LEN(10)
             DCL        VAR(&orig) TYPE(*CHAR) LEN(10)
             DCL        VAR(&cur) TYPE(*CHAR) LEN(10)
             DCL        VAR(&APP) TYPE(*CHAR) LEN(10)
             DCL        VAR(&env) TYPE(*CHAR) LEN(10)
             DCL        VAR(&ver) TYPE(*CHAR) LEN(8)
/* init risultato */
             CHGVAR     VAR(&LIBs) VALUE('          ')

/* estrazione pgm OT dalla libreria di versione corrente */
             RTVDTAARA  DTAARA(&CUR/Â£WSSOTA (1 10)) RTNVAR(&ORIG)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(FINE))
/* costruisce il nome ota originale */
    ciclo1:
             IF         COND(%SST(&ORIG 1 3) *EQ 'OTA') THEN(DO)
                  CHGVAR     VAR(&IDX) VALUE(%SST(&ORIG 4 1))
                  CHGVAR     VAR(&IDX) VALUE(&IDX - 1)
                  IF         COND(&IDX < 0) THEN(GOTO CMDLBL(FINE))
                  CHGVAR     VAR(%SST(&ORIG 4 1)) VALUE(&IDX)
                  CALLSUBR   SUBR(SR_LIB)
                  GOTO       CMDLBL(ciclo1)
             ENDDO
        /* se inizia per ot  */
    ciclo2:
             IF         COND(%SST(&ORIG 1 2) *EQ 'OT' *AND +
                          (%SST(&ORIG 3 1) *NE 'A')) THEN(DO)
                  CHGVAR     VAR(&IDX) VALUE(%SST(&ORIG 3 2))
                  CHGVAR     VAR(&IDX) VALUE(&IDX - 1)
                  IF         COND(&IDX < 0) THEN(GOTO CMDLBL(FINE))
                  CHGVAR     VAR(%SST(&ORIG 3 2)) VALUE(&IDX)
                  CALLSUBR   SUBR(SR_LIB)
                  GOTO       CMDLBL(ciclo2)
             ENDDO
fine:
             IF         COND(&LIBS *NE ' ') THEN(CALLSUBR +
                          SUBR(SR_LISTA))
             RETURN

             SUBR       SUBR(SR_LIB)
             CALL       PGM(ARCADOCR2) PARM(&ORIG &RISULT &APP &ENV)
             IF         COND(&RISULT *NE ' ') THEN(DO)
             CHGVAR     VAR(%SST(&LIBS &IDL 10)) VALUE(&risult)
             CHGVAR     VAR(&IDL) VALUE(&IDL + 10)
             enddo
             ENDSUBR


             SUBR       SUBR(SR_LISTA)

             CHGVAR     VAR(&IDX) VALUE(1)
looplista:
             CHGVAR     VAR(&LIB) VALUE(%SST(&LIbs &IDX 10))
             IF         COND(&LIB = '          ') THEN(GOTO +
                          CMDLBL(FINELISTA))
             RMVLIBLE   LIB(&LIB)
             MONMSG     MSGID(CPF0000)
             IF         COND(&prec *eq '          ') THEN(do)
                        ADDLIBLE   LIB(&LIB)
                        MONMSG     MSGID(CPF0000)
             enddo
             IF         COND(&prec *ne '          ') THEN(do)
                        ADDLIBLE   LIB(&LIB) POSITION(*AFTER &prec)
                        MONMSG     MSGID(CPF0000)
             enddo
             CHGVAR     VAR(&prec) VALUE(&lib)
             CHGVAR     VAR(&IDX) VALUE(&IDX + 10)
             IF         COND(&IDX > 100) THEN(GOTO CMDLBL(FINElista))
      /*     GOTO       CMDLBL(LOOPlista)   abilitare x tutte le vers*/
finelista:
             ENDSUBR

             ENDPGM
